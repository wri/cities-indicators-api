name: Cities API Image Builder

on:
  push:
    branches:
      - ccl-develop
  workflow_dispatch:
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # OIDC Assume Role
      - name: OIDC Assume Role
        id: oidc-assume-role
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::540362055257:role/GitHubActionsOIDC
          aws-region: us-east-1

      # AWS ECR Login
      - name: ECR Login
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 540362055257.dkr.ecr.us-east-1.amazonaws.com

      # Docker Image Build
      - name: Build Docker image
        id: build-image
        run: |
          REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          docker build -t ${REPOSITORY_NAME}-img:latest .
          docker tag ${REPOSITORY_NAME}-img:latest 540362055257.dkr.ecr.us-east-1.amazonaws.com/${REPOSITORY_NAME}-img:latest

      # Push to ECR
      - name: Push to AWS ECR
        run: |
          REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          docker push 540362055257.dkr.ecr.us-east-1.amazonaws.com/${REPOSITORY_NAME}-img:latest
      
      # Deploy to AWS APP Runner
      - name: Deploy to App Runner
        id: deploy-apprunner
        uses: wri/cities-indicators-api@ccl-develop
        with:
          service: cities-api-app-runner-service-Docker 
          image: ${{ steps.build-image.outputs.image }}
          access-role-arn: arn:aws:iam::540362055257:role/cities-api-app-runner-docker
          region: us-east-1
          cpu : 1
          memory : 2
          wait-for-service-stability-seconds: 1200
      
      - name: App Runner URL
        run: echo "App runner URL ${{ steps.deploy-apprunner.outputs.service-url }}" 